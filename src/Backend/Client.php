<?php
/**
 * Client automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace Fusio\Sdk\Backend;

use GuzzleHttp\Exception\BadResponseException;
use Sdkgen\Client\ClientAbstract;
use Sdkgen\Client\Credentials;
use Sdkgen\Client\Exception\ClientException;
use Sdkgen\Client\Exception\UnknownStatusCodeException;

class Client extends ClientAbstract
{
    public function backendUser(): BackendUserTag
    {
        return new BackendUserTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendTrash(): BackendTrashTag
    {
        return new BackendTrashTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendTransaction(): BackendTransactionTag
    {
        return new BackendTransactionTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendStatistic(): BackendStatisticTag
    {
        return new BackendStatisticTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendSdk(): BackendSdkTag
    {
        return new BackendSdkTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendScope(): BackendScopeTag
    {
        return new BackendScopeTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendSchema(): BackendSchemaTag
    {
        return new BackendSchemaTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendOperation(): BackendOperationTag
    {
        return new BackendOperationTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendRole(): BackendRoleTag
    {
        return new BackendRoleTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendRate(): BackendRateTag
    {
        return new BackendRateTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendPlan(): BackendPlanTag
    {
        return new BackendPlanTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendPage(): BackendPageTag
    {
        return new BackendPageTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendMarketplace(): BackendMarketplaceTag
    {
        return new BackendMarketplaceTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendLog(): BackendLogTag
    {
        return new BackendLogTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendGenerator(): BackendGeneratorTag
    {
        return new BackendGeneratorTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendEvent(): BackendEventTag
    {
        return new BackendEventTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendDashboard(): BackendDashboardTag
    {
        return new BackendDashboardTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendCronjob(): BackendCronjobTag
    {
        return new BackendCronjobTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendConnection(): BackendConnectionTag
    {
        return new BackendConnectionTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendConfig(): BackendConfigTag
    {
        return new BackendConfigTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendCategory(): BackendCategoryTag
    {
        return new BackendCategoryTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendAudit(): BackendAuditTag
    {
        return new BackendAuditTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendApp(): BackendAppTag
    {
        return new BackendAppTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendAction(): BackendActionTag
    {
        return new BackendActionTag(
            $this->httpClient,
            $this->parser
        );
    }

    public function backendAccount(): BackendAccountTag
    {
        return new BackendAccountTag(
            $this->httpClient,
            $this->parser
        );
    }



}
